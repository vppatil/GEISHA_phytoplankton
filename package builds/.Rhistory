"Trebouxiophyceae")){
mfg = "10a-FilaChlorp"
}
else
if (class %in% c("Conjugatophyceae",
"Zygnematophyceae")){
mfg = "10b-FilaConj"
}
else
if (class %in% c("Xanthophyceae",
"Eustigmatophyceae")){
mfg = "10c-FilaXant"
}
}
else
if (order %in% c("Chlorococcales",
"Chlamydomonadales",
"Tetrasporales")) {
if (gelatinous %in% 1) {
mfg = "11b-GelaChlor"
}
else {
mfg = "11a-NakeChlor"
}
}
else {
mfg = "11c-OtherCol"
}
}
else
if (size %in% "large") {
if (class %in% c("Chlorophyceae",
"Conjugatophyceae",
"Zygnematophyceae")) {
mfg = "8a-LargeCoCh"
}
else {
mfg = "8b-LargeUnic"
}
}
else {
if (class %in% c("Conjugatophyceae",
"Zygnematophyceae")){
mfg = "9a-SmallConj"
}
else
if (order %in% "Chlorococcales") {
mfg = "9b-SmallChlor"
}
else
if (class %in% c("Chrysophyceae",
"Synurophyceae",
"Phaeothamniophyceae")) {
mfg = "9c-SmallChry2"
}
else
if(!is.na(class) & !is.na(order))
{
mfg = "9d-SmallUnic"
}
}
}
return(mfg)
}
#read in the data file you want to classify
acton<-read.csv('~/gleon/Geisha/datasets/phyto_data/RawPhytoData_Acton_QAQC_18Jan2018.csv')
#create a list of unique species names from the lake
actonspp<-data.frame(phyto_name=unique(acton$phyto_name))
#separate out genus and species, and clean up name formatting
actonspp<-genus_species_extract(actonspp,'phyto_name')
#load csr and mfg trait databases
data("csrTraits")
data("mfgTraits")
#merge trait data into species data
csrTraits<-subset(csrTraits,select=c('phyto_name','SAV','MLD','MSV'))
mfgTraits<-mfgTraits[,!names(mfgTraits) %in% c('genus','species','MFG.fromtraits')]
#keep all species- assign NA if no trait values are available
actonspp<-merge(actonspp,csrTraits,all.x=T)
actonspp<-merge(actonspp,mfgTraits,all.x=T)
actonspp$MFG<-traits_to_mfg_df(actonspp,arg.names = c('Mobility.apparatus','Size','Colonial','Filament','Centric','Gelatinous','Aerotopes','Class','Order'))
head(actonspp$MFG)
head(actonspp)
traits_to_mfg()
library(devtools)
#install and load the most recent package version from vijay patil's github account
install_github('vppatil/GEISHA_phytoplankton/package builds/algaeClassify',ref='working')
library(algaeClassify)
#read in the data file you want to classify
acton<-read.csv('~/gleon/Geisha/datasets/phyto_data/RawPhytoData_Acton_QAQC_18Jan2018.csv')
#create a list of unique species names from the lake
actonspp<-data.frame(phyto_name=unique(acton$phyto_name))
#separate out genus and species, and clean up name formatting
actonspp<-genus_species_extract(actonspp,'phyto_name')
#load csr and mfg trait databases
data("csrTraits")
data("mfgTraits")
#merge trait data into species data
csrTraits<-subset(csrTraits,select=c('phyto_name','SAV','MLD','MSV'))
mfgTraits<-mfgTraits[,!names(mfgTraits) %in% c('genus','species','MFG.fromtraits')]
#keep all species- assign NA if no trait values are available
actonspp<-merge(actonspp,csrTraits,all.x=T)
actonspp<-merge(actonspp,mfgTraits,all.x=T)
#assign morphofunctional groups based on Traits
actonspp$MFGfromTraits<-traits_to_mfg_df(actonspp,arg.names = c('Mobility.apparatus','Size','Colonial','Filament','Centric','Gelatinous','Aerotopes','Class','Order'))
#classify the remaining species based on pre-defined libraries.
actonspp<-species_to_mfg_df(actonspp)
#use trait-based classification if available, or library-based classification otherwise
actonspp$MFGfromLibrary<-actonspp$MFG
actonspp$MFG<-ifelse(!is.na(actonspp$MFGfromLibrary),actonspp$MFGfromLibrary,actonspp$MFGfromTraits)
table(is.na(actonspp$MFG))
actonspp[is.na(actonspp$MFG),]
species_to_mfg('Aulacoseira')
species_to_mfg('Aulacoseira','')
species_mfg_library[species_mfg_library$genus =='Aulacoseira',]
species_to_mfg('Aulacoseira','alpigena')
species_to_mfg('Aulacoseira','')
Aulacoseira
species_to_mfg('Aulacoseira','')
species_to_mfg('Aulacoseira','',mfgDbase = species_mfg_library)
species_to_mfg('Aulacoseira','',flag=1,mfgDbase = species_mfg_library)
library(algaeClassify)
scan(what='numeric')
214/40
library(devtools)
library(utils)
#install and load the most recent package version from vijay patil's github account
install_github('vppatil/GEISHA_phytoplankton/package builds/algaeClassify',ref='working')
library(algaeClassify)
#read in the data file you want to classify
lakephyto<-read.csv('C:/Users/vpatil/OneDrive - DOI/Geisha_main/datasets/phyto_data/RawPhytoData_Muggelsee_QAQC_31Aug2017.csv')
#create a list of unique species names from the lake
lakephytospp<-data.frame(phyto_name=unique(lakephyto$phyto_name))
#separate out genus and species, and clean up name formatting
lakephytospp<-genus_species_extract(lakephytospp,'phyto_name')
data(csrTraits)
data(mfgTraits)
#merge trait data into species data
csrTraits<-subset(csrTraits,select=c('phyto_name','SAV','MLD','MSV'))
mfgTraits<-mfgTraits[,!names(mfgTraits) %in% c('genus','species','MFG.fromtraits')]
#keep all species- assign NA if no trait values are available
lakephytospp<-merge(lakephytospp,csrTraits,all.x=T)
lakephytospp<-merge(lakephytospp,mfgTraits,all.x=T)
#assign morphofunctional groups based on Traits
lakephytospp$MFGfromTraits<-traits_to_mfg_df(lakephytospp,arg.names = c('Mobility.apparatus','Size','Colonial','Filament','Centric','Gelatinous','Aerotopes','Class','Order'))
#classify the remaining species based on pre-defined libraries.
data("species_mfg_library")
#classify the remaining species based on pre-defined libraries.
# data("species_mfg_library") #you can load the species mfg library if you want, but it is not necessary.
lakephytospp<-species_to_mfg_df(lakephytospp,flag=2) #flag = 2 allows for manual resolution of ambiguous classifications
head(lakephytospp)
species_to_mfg('Anabaena','planctonica')
table(lakephytospp$ambiguous.mfg)
#classify the remaining species based on pre-defined libraries.
# data("species_mfg_library") #you can load the species mfg library if you want, but it is not necessary.
lakephytospp<-species_to_mfg_df(lakephytospp,flag=1) #flag = 2 allows for manual resolution of ambiguous classifications
restart()
q()
#load helper library for installing packages from github
# install.packages('devtools')
library(devtools)
library(utils)
#install and load the most recent package version from vijay patil's github account
install_github('vppatil/GEISHA_phytoplankton/package builds/algaeClassify',ref='working',upgrade = "never")
library(algaeClassify)
#read in the data file you want to classify
lakephyto<-read.csv('C:/Users/vpatil/OneDrive - DOI/Geisha_main/datasets/phyto_data/RawPhytoData_Muggelsee_QAQC_31Aug2017.csv')
#create a list of unique species names from the lake
lakephytospp<-data.frame(phyto_name=unique(lakephyto$phyto_name))
#separate out genus and species, and clean up name formatting
lakephytospp<-genus_species_extract(lakephytospp,'phyto_name')
#load csr and mfg trait databases
data(csrTraits)
data(mfgTraits)
species_to_mfg("Scenedesmus")
species_to_mfg('Scenedesmus','bijuga')
species_to_mfg_df_RB <- function(phyto.df,flag=1,mfgDbase=NA)
{
#phyto.len<-dim(phyto.df)[1]
#na.vec<-rep(NA,length=phyto.len)
#mfgs<-data.frame(MFG=na.vec,ambiguous.mfg=na.vec,genus.classification=na.vec,partial.match=na.vec,flag=na.vec)
# Instead of the code above, create the first row here
mfgs <- species_to_mfg(phyto.df$genus[1],phyto.df$species[1],flag=flag,mfgDbase=mfgDbase)
# Then bind the other rows, starting at row 2.
for(i in 2:phyto.len)
{
mfgs <- rbind(mfgs,
species_to_mfg(phyto.df$genus[i],phyto.df$species[i],flag=flag,mfgDbase=mfgDbase))
}
# phyto.df<-phyto.df[,names(phyto.df) %in% c('MFG','ambiguous.mfg','genus.classification','partial.match','flag')==FALSE,]
phyto.df$MFG=c(as.character(mfgs[,1]))
phyto.df$ambiguous.mfg=c(as.character(mfgs[,2]))
phyto.df$genus.classification=c(as.character(mfgs[,3]))
phyto.df$partial.match=c(as.character(mfgs[,4]))
phyto.df$flag=c(as.character(mfgs[,5]))
return(phyto.df)
}
###############################################################################
# package creation & maintenance file
# M.J. Lajeunesse, R course 7/5/16
###############################################################################
rm(list=ls())
# define the package name
thePackage <- "algaeClassify"
# set directory to the package development folder
setwd("C:/Users/vpatil/OneDrive - DOI/Geisha_main/phyto_package/GEISHA_phytoplankton_github_shared/package builds/")
# create new bare-bones package in development folder
# NOTE: only run package creation script once
#install.packages("devtools"); # make sure your have the most recent version
#install.packages("roxygen2"); # make sure your have the most recent version
library(devtools); library(roxygen2)
# create(thePackage)
setwd('algaeClassify')
rm(list='traitranges')
roxygenize('.')
# STEP 2, add functionality ###################################################
# (1) update DESCRIPTION file (package description, authors, dependencies)
# (2) add functions (*.R) in R folder of package
# (3) within *.R files should include roxygen2 markdown of function and
#     parameter txt (e.g., what you see in manual)
###############################################################################
# add dataset to package
lakegeneva <- read.csv('../../lakegeneva.csv')
# use_data(library_MFG, pkg = thePackage, internal = TRUE, overwrite = TRUE)
use_data(lakegeneva, overwrite = TRUE)
rimet_mfgtraits<-read.csv('C:/Users/vpatil/OneDrive - DOI/Geisha_main/phyto_package/GEISHA_phytoplankton_github_shared/Frederic_MFGtraits.csv')
mfgTraits=rimet_mfgtraits[!is.na(rimet_mfgtraits$MFG.fromtraits),]
.simpleCap <- function(x) {
s <- strsplit(x, " ")[[1]]
paste(toupper(substring(s, 1, 1)), substring(s, 2),
sep = "", collapse = " ")}
names(mfgTraits)<-sapply(names(mfgTraits),.simpleCap)
names(mfgTraits)[1]='phyto_name'
names(mfgTraits)[2:3]=c('genus','species')
use_data(mfgTraits,overwrite=TRUE)
fred.csrtraits<-read.csv('C:/Users/vpatil/OneDrive - DOI/Geisha_main/phyto_package/GEISHA_phytoplankton_github_shared/Fred_CSRtraits_numericClassCorrection.csv')
csrTraits<-fred.csrtraits
csrTraits<-genus_species_extract(csrTraits,'phyto_name')
csrTraits$phyto_name<-paste(csrTraits$genus,csrTraits$species)
csrTraits$phyto_name<-trimws(csrTraits$phyto_name)
use_data(csrTraits,overwrite=TRUE)
mfg_csr_library<-read.csv('C:/Users/vpatil/OneDrive - DOI/Geisha_main/phyto_package/mee ms/mfg_csr_library.csv')
use_data(mfg_csr_library,overwrite=TRUE)
# setwd('C:/Users/vpatil/OneDrive - DOI/Geisha_main/phyto_package/GEISHA_phytoplankton_github_shared/package builds/')# use_data(library_MFG, pkg = thePackage, internal = TRUE, overwrite = TRUE)
#
# load('sppMFG.rda')
# setwd('data/')
# load('species.mfg.library.rda')
# setwd('..')
# use_data(species.mfg.library, overwrite = TRUE)
setwd('C:/Users/vpatil/OneDrive - DOI/Geisha_main/phyto_package/GEISHA_phytoplankton_github_shared/')
load('traitranges.rda')
traitranges=traitranges[1:3,]
traitranges$units=c('um^-1','um','')
use_data(traitranges, overwrite = TRUE)
setwd('C:/Users/vpatil/OneDrive - DOI/Geisha_main/jennie MFG/')
species_mfg_library<-read.csv('expanded_mfg_library_2_1_2021.csv')
species_mfg_library<-subset(species_mfg_library,select=c('genus','species','MFG','source'))
species_mfg_library$MFG<-gsub('6a-LargeCent','6a1-LargeCent',species_mfg_library$MFG)
use_data(species_mfg_library,overwrite=TRUE)
setwd('C:/Users/vpatil/OneDrive - DOI/Geisha_main/phyto_package/GEISHA_phytoplankton_github_shared/package builds/algaeClassify/')
rm(list='traitranges')
# STEP 3, error check and compile package for CRAN ############################
# (1) update DESCRIPTION file
# (2) add functions (*.R) in R folder of package
###############################################################################
# constructs binaries
library(devtools);
# creates bundle to submit to CRAN (*.tar.zip file found in development folder)
build('.', manual = FALSE)
# error checks prior to submission (all errors and warnings need to be addressed)
rm(list=ls())
# set directory to the package development folder
setwd("C:/Users/vpatil/OneDrive - DOI/Geisha_main/phyto_package/GEISHA_phytoplankton_github_shared/package builds/")
# create new bare-bones package in development folder
# NOTE: only run package creation script once
#install.packages("devtools"); # make sure your have the most recent version
#install.packages("roxygen2"); # make sure your have the most recent version
library(devtools); library(roxygen2)
# create(thePackage)
setwd('algaeClassify')
check('.',cran=FALSE)
warning()
# STEP 4, Build example PDF manual (will not be same as CRAN, but close) ######
###############################################################################
# BEFORE STARTING##############################################################
# 1) Download & install MiKTeX to generate manual & vignettes
# 2) through MikTeX /Maintenace/packages install: url, inconsolata, upquote
###############################################################################
setwd('..')
thePackage='algaeClassify'
document(thePackage)
path <- find.package(thePackage)
system(paste(shQuote(file.path(R.home("bin"), "R")), "CMD", "Rd2pdf", shQuote(path)))
species_to_mfg_df <- function(phyto.df,flag=1,mfgDbase=NA)
{
#phyto.len<-dim(phyto.df)[1]
#na.vec<-rep(NA,length=phyto.len)
#mfgs<-data.frame(MFG=na.vec,ambiguous.mfg=na.vec,genus.classification=na.vec,partial.match=na.vec,flag=na.vec)
# Instead of the code above, create the first row here
mfgs <- species_to_mfg(phyto.df$genus[1],phyto.df$species[1],flag=flag,mfgDbase=mfgDbase)
# Then bind the other rows, starting at row 2.
for(i in 2:phyto.len)
{
mfgs <- rbind(mfgs,
species_to_mfg(phyto.df$genus[i],phyto.df$species[i],flag=flag,mfgDbase=mfgDbase))
}
# phyto.df<-phyto.df[,names(phyto.df) %in% c('MFG','ambiguous.mfg','genus.classification','partial.match','flag')==FALSE,]
phyto.df$MFG=c(as.character(mfgs[,1]))
phyto.df$ambiguous.mfg=c(as.character(mfgs[,2]))
phyto.df$genus.classification=c(as.character(mfgs[,3]))
phyto.df$partial.match=c(as.character(mfgs[,4]))
phyto.df$flag=c(as.character(mfgs[,5]))
return(phyto.df)
}
###############################################################################
# package creation & maintenance file
# M.J. Lajeunesse, R course 7/5/16
###############################################################################
rm(list=ls())
# define the package name
thePackage <- "algaeClassify"
# set directory to the package development folder
setwd("C:/Users/vpatil/OneDrive - DOI/Geisha_main/phyto_package/GEISHA_phytoplankton_github_shared/package builds/")
# create new bare-bones package in development folder
# NOTE: only run package creation script once
#install.packages("devtools"); # make sure your have the most recent version
#install.packages("roxygen2"); # make sure your have the most recent version
library(devtools); library(roxygen2)
# create(thePackage)
setwd('algaeClassify')
rm(list='traitranges')
roxygenize('.')
# STEP 2, add functionality ###################################################
# (1) update DESCRIPTION file (package description, authors, dependencies)
# (2) add functions (*.R) in R folder of package
# (3) within *.R files should include roxygen2 markdown of function and
#     parameter txt (e.g., what you see in manual)
###############################################################################
# add dataset to package
lakegeneva <- read.csv('../../lakegeneva.csv')
# use_data(library_MFG, pkg = thePackage, internal = TRUE, overwrite = TRUE)
use_data(lakegeneva, overwrite = TRUE)
rimet_mfgtraits<-read.csv('C:/Users/vpatil/OneDrive - DOI/Geisha_main/phyto_package/GEISHA_phytoplankton_github_shared/Frederic_MFGtraits.csv')
mfgTraits=rimet_mfgtraits[!is.na(rimet_mfgtraits$MFG.fromtraits),]
.simpleCap <- function(x) {
s <- strsplit(x, " ")[[1]]
paste(toupper(substring(s, 1, 1)), substring(s, 2),
sep = "", collapse = " ")}
names(mfgTraits)<-sapply(names(mfgTraits),.simpleCap)
names(mfgTraits)[1]='phyto_name'
names(mfgTraits)[2:3]=c('genus','species')
use_data(mfgTraits,overwrite=TRUE)
fred.csrtraits<-read.csv('C:/Users/vpatil/OneDrive - DOI/Geisha_main/phyto_package/GEISHA_phytoplankton_github_shared/Fred_CSRtraits_numericClassCorrection.csv')
csrTraits<-fred.csrtraits
csrTraits<-genus_species_extract(csrTraits,'phyto_name')
csrTraits$phyto_name<-paste(csrTraits$genus,csrTraits$species)
csrTraits$phyto_name<-trimws(csrTraits$phyto_name)
use_data(csrTraits,overwrite=TRUE)
mfg_csr_library<-read.csv('C:/Users/vpatil/OneDrive - DOI/Geisha_main/phyto_package/mee ms/mfg_csr_library.csv')
use_data(mfg_csr_library,overwrite=TRUE)
# setwd('C:/Users/vpatil/OneDrive - DOI/Geisha_main/phyto_package/GEISHA_phytoplankton_github_shared/package builds/')# use_data(library_MFG, pkg = thePackage, internal = TRUE, overwrite = TRUE)
#
# load('sppMFG.rda')
# setwd('data/')
# load('species.mfg.library.rda')
# setwd('..')
# use_data(species.mfg.library, overwrite = TRUE)
setwd('C:/Users/vpatil/OneDrive - DOI/Geisha_main/phyto_package/GEISHA_phytoplankton_github_shared/')
load('traitranges.rda')
traitranges=traitranges[1:3,]
traitranges$units=c('um^-1','um','')
use_data(traitranges, overwrite = TRUE)
setwd('C:/Users/vpatil/OneDrive - DOI/Geisha_main/jennie MFG/')
species_mfg_library<-read.csv('expanded_mfg_library_2_1_2021.csv')
species_mfg_library<-subset(species_mfg_library,select=c('genus','species','MFG','source'))
species_mfg_library$MFG<-gsub('6a-LargeCent','6a1-LargeCent',species_mfg_library$MFG)
use_data(species_mfg_library,overwrite=TRUE)
setwd('C:/Users/vpatil/OneDrive - DOI/Geisha_main/phyto_package/GEISHA_phytoplankton_github_shared/package builds/algaeClassify/')
rm(list='traitranges')
# STEP 3, error check and compile package for CRAN ############################
# (1) update DESCRIPTION file
# (2) add functions (*.R) in R folder of package
###############################################################################
# constructs binaries
library(devtools);
# creates bundle to submit to CRAN (*.tar.zip file found in development folder)
build('.', manual = FALSE)
# error checks prior to submission (all errors and warnings need to be addressed)
rm(list=ls())
# set directory to the package development folder
setwd("C:/Users/vpatil/OneDrive - DOI/Geisha_main/phyto_package/GEISHA_phytoplankton_github_shared/package builds/")
# create new bare-bones package in development folder
# NOTE: only run package creation script once
#install.packages("devtools"); # make sure your have the most recent version
#install.packages("roxygen2"); # make sure your have the most recent version
library(devtools); library(roxygen2)
# create(thePackage)
setwd('algaeClassify')
check('.',cran=FALSE)
warning()
# STEP 4, Build example PDF manual (will not be same as CRAN, but close) ######
###############################################################################
# BEFORE STARTING##############################################################
# 1) Download & install MiKTeX to generate manual & vignettes
# 2) through MikTeX /Maintenace/packages install: url, inconsolata, upquote
###############################################################################
setwd('..')
thePackage='algaeClassify'
document(thePackage)
path <- find.package(thePackage)
system(paste(shQuote(file.path(R.home("bin"), "R")), "CMD", "Rd2pdf", shQuote(path)))
###############################################################################
# package creation & maintenance file
# M.J. Lajeunesse, R course 7/5/16
###############################################################################
rm(list=ls())
# define the package name
thePackage <- "algaeClassify"
# set directory to the package development folder
setwd("C:/Users/vpatil/OneDrive - DOI/Geisha_main/phyto_package/GEISHA_phytoplankton_github_shared/package builds/")
# create new bare-bones package in development folder
# NOTE: only run package creation script once
#install.packages("devtools"); # make sure your have the most recent version
#install.packages("roxygen2"); # make sure your have the most recent version
library(devtools); library(roxygen2)
# create(thePackage)
setwd('algaeClassify')
rm(list='traitranges')
roxygenize('.')
# STEP 2, add functionality ###################################################
# (1) update DESCRIPTION file (package description, authors, dependencies)
# (2) add functions (*.R) in R folder of package
# (3) within *.R files should include roxygen2 markdown of function and
#     parameter txt (e.g., what you see in manual)
###############################################################################
# add dataset to package
lakegeneva <- read.csv('../../lakegeneva.csv')
# use_data(library_MFG, pkg = thePackage, internal = TRUE, overwrite = TRUE)
use_data(lakegeneva, overwrite = TRUE)
rimet_mfgtraits<-read.csv('C:/Users/vpatil/OneDrive - DOI/Geisha_main/phyto_package/GEISHA_phytoplankton_github_shared/Frederic_MFGtraits.csv')
mfgTraits=rimet_mfgtraits[!is.na(rimet_mfgtraits$MFG.fromtraits),]
.simpleCap <- function(x) {
s <- strsplit(x, " ")[[1]]
paste(toupper(substring(s, 1, 1)), substring(s, 2),
sep = "", collapse = " ")}
names(mfgTraits)<-sapply(names(mfgTraits),.simpleCap)
names(mfgTraits)[1]='phyto_name'
names(mfgTraits)[2:3]=c('genus','species')
use_data(mfgTraits,overwrite=TRUE)
fred.csrtraits<-read.csv('C:/Users/vpatil/OneDrive - DOI/Geisha_main/phyto_package/GEISHA_phytoplankton_github_shared/Fred_CSRtraits_numericClassCorrection.csv')
csrTraits<-fred.csrtraits
csrTraits<-genus_species_extract(csrTraits,'phyto_name')
csrTraits$phyto_name<-paste(csrTraits$genus,csrTraits$species)
csrTraits$phyto_name<-trimws(csrTraits$phyto_name)
use_data(csrTraits,overwrite=TRUE)
mfg_csr_library<-read.csv('C:/Users/vpatil/OneDrive - DOI/Geisha_main/phyto_package/mee ms/mfg_csr_library.csv')
use_data(mfg_csr_library,overwrite=TRUE)
# setwd('C:/Users/vpatil/OneDrive - DOI/Geisha_main/phyto_package/GEISHA_phytoplankton_github_shared/package builds/')# use_data(library_MFG, pkg = thePackage, internal = TRUE, overwrite = TRUE)
#
# load('sppMFG.rda')
# setwd('data/')
# load('species.mfg.library.rda')
# setwd('..')
# use_data(species.mfg.library, overwrite = TRUE)
setwd('C:/Users/vpatil/OneDrive - DOI/Geisha_main/phyto_package/GEISHA_phytoplankton_github_shared/')
load('traitranges.rda')
traitranges=traitranges[1:3,]
traitranges$units=c('um^-1','um','')
use_data(traitranges, overwrite = TRUE)
setwd('C:/Users/vpatil/OneDrive - DOI/Geisha_main/jennie MFG/')
species_mfg_library<-read.csv('expanded_mfg_library_2_1_2021.csv')
species_mfg_library<-subset(species_mfg_library,select=c('genus','species','MFG','source'))
species_mfg_library$MFG<-gsub('6a-LargeCent','6a1-LargeCent',species_mfg_library$MFG)
use_data(species_mfg_library,overwrite=TRUE)
setwd('C:/Users/vpatil/OneDrive - DOI/Geisha_main/phyto_package/GEISHA_phytoplankton_github_shared/package builds/algaeClassify/')
rm(list='traitranges')
# STEP 3, error check and compile package for CRAN ############################
# (1) update DESCRIPTION file
# (2) add functions (*.R) in R folder of package
###############################################################################
# constructs binaries
library(devtools);
# creates bundle to submit to CRAN (*.tar.zip file found in development folder)
build('.', manual = FALSE)
# error checks prior to submission (all errors and warnings need to be addressed)
rm(list=ls())
# set directory to the package development folder
setwd("C:/Users/vpatil/OneDrive - DOI/Geisha_main/phyto_package/GEISHA_phytoplankton_github_shared/package builds/")
# create new bare-bones package in development folder
# NOTE: only run package creation script once
#install.packages("devtools"); # make sure your have the most recent version
#install.packages("roxygen2"); # make sure your have the most recent version
library(devtools); library(roxygen2)
# create(thePackage)
setwd('algaeClassify')
check('.',cran=FALSE)
warning()
# STEP 4, Build example PDF manual (will not be same as CRAN, but close) ######
###############################################################################
# BEFORE STARTING##############################################################
# 1) Download & install MiKTeX to generate manual & vignettes
# 2) through MikTeX /Maintenace/packages install: url, inconsolata, upquote
###############################################################################
setwd('..')
thePackage='algaeClassify'
document(thePackage)
path <- find.package(thePackage)
system(paste(shQuote(file.path(R.home("bin"), "R")), "CMD", "Rd2pdf", shQuote(path)))
thePackage='algaeClassify'
document(thePackage)
path <- find.package(thePackage)
system(paste(shQuote(file.path(R.home("bin"), "R")), "CMD", "Rd2pdf", shQuote(path)))
