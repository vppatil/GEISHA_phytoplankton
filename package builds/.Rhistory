direct.recovs=ifelse(recoveries.maj$R.Year==recoveries.maj$B.Year |
(recoveries.maj$R.Year==recoveries.maj$B.Year+1 & recoveries.maj$R.Month<5),1,0)
table(direct.recovs,recoveries.maj$R.Year)
juv.recovered.bands<-recoveries$Bandnumber[recoveries$Bandnumber %in% row.names(CH.J)]
head(mark.ehist[row.names(CH.recaps) %in% juv.recovered.bands,])
head(CH[row.names(CH.recaps) %in% juv.recovered.bands,])
mark.ehist[mark.ehist>0]=1
maj<-vector(mode='numeric',length=nrow(CH.recaps))
maj[1:nrow(CH.J)]=1
maa<-1-maj
age<-ifelse(maj==1,'J','A')
age<-factor(age,levels=c('J','A'))
marray <- function(ch, unobs = 0){
ns <- length(table(ch)) - 1 + unobs
print(ns)
no <- ncol(ch)
out <- matrix(0, ncol = ns*(no-1)+1, nrow = ns*(no-1))
# Remove capture histories of individuals that are marked at last occasion
get.first <- function(x) min(which(x!=0))
first <- apply(ch, 1, get.first)
last <- which(first==no)
if (length(last) > 0) ch <- ch[-last,]
# Compute m-array
for (i in 1:nrow(ch)){
cap.occ <- which(ch[i,]!=0)
state <- ch[i,cap.occ]
if (length(state) == 1) {
out[state[1]+ns*(cap.occ[1]-1), ns*(no-1)+1] <- out[state[1]+ns*(cap.occ[1]-1), ns*(no-1)+1] + 1
}
if (length(state) > 1) {
for (t in 2:length(cap.occ)){
out[(cap.occ[t-1]-1)*ns+state[t-1], (cap.occ[t]-2)*ns+state[t]] <- out[(cap.occ[t-1]-1)*ns+state[t-1], (cap.occ[t]-2)*ns+state[t]] + 1
} # t
if (max(cap.occ) < no){
out[(cap.occ[t]-1)*ns+state[t], ns*(no-1)+1] <- out[(cap.occ[t]-1)*ns+state[t], ns*(no-1)+1] + 1
} # if
} # if
} # t
return(out)
}
ms.arr <- marray(CH,unobs=2)
# write.csv(ms.arr,'~/Goose files/demography ms/plots_ouptut/BLBR_msarray_11_18_realdata.csv')
yrs<-2011:2018
lsgo.gos<-c(2278,2026,886,1021,6964,4764,10673,10679)
lsgo.ad<-c(1745,2009,1568,1524,4593,4990,8651,13135)
blbr.gos<-c(765,369,356,1018,1399,985,2825,1726)
blbr.ad<-c(1221,776,439,1049,1215,1007,2950,2606)
goose.total=lsgo.ad+blbr.ad
setwd('~/Goose files/demography ms/covariate data/')
phenol=read.csv('phenology covariates_wide.csv')[1:8,]
Snow<-phenol$Julian.Day.of.median.snow...50.
Green<-phenol$NDVI.doy.50max
Dens<-phenol$BLBR.ADULTS+phenol$BLBR.ADULTS
ao.summer<-phenol$ao.junaug
hatch<-phenol$median.predhatch.BLBR
init<-phenol$median.init.BLBR
Dens<-goose.total
greenmis<-hatch-Green
absgreenmis<-abs(greenmis)
ns=6
covs <- data.frame(time=yrs,green=Green,dens=Dens,greenmis=greenmis,
absgreenmis=absgreenmis,ao.summer=ao.summer,hatch=hatch)
mark.ehist<-apply(mark.ehist,1,paste,collapse='')
lsgo.ld<-data.frame(ch=mark.ehist,markage=age)
lsgo.proc<-process.data(data=lsgo.ld,begin.time=2011,model="Burnham",
groups = c("markage"),age.var = 1,initial.ages = c(0,2))
lsgo.ddl<-make.design.data(lsgo.proc)
# dipper.ddl=add.design.data(dipper.process, dipper.ddl,
# parameter="Phi", type="age", bins=c(0,1,3,6),name="ageclass")
lsgo.ddl<-add.design.data(lsgo.proc,lsgo.ddl,parameter = c("S"),
type="age",bins=c(0,1,10),right=FALSE,replace=TRUE,name="ageclass")
lsgo.ddl<-add.design.data(lsgo.proc,lsgo.ddl,parameter = c("p"),
type="age",bins=c(1,2,10),right=FALSE,replace=TRUE,name="ageclass")
lsgo.ddl<-add.design.data(lsgo.proc,lsgo.ddl,parameter = c("r"),
type="age",bins=c(0,1,10),right=FALSE,replace=TRUE,name="ageclass")
lsgo.ddl<-add.design.data(lsgo.proc,lsgo.ddl,parameter = c("F"),
type="age",bins=c(0,1,10),right=FALSE,replace=TRUE,name="ageclass")
lsgo.ddl$S$young=0
lsgo.ddl$S$young[lsgo.ddl$S$age==0]=1
lsgo.ddl$S$old=1-lsgo.ddl$S$young
lsgo.ddl$p$young=0
lsgo.ddl$p$young[lsgo.ddl$p$age==1]=1
lsgo.ddl$p$old=1-lsgo.ddl$p$young
lsgo.ddl$r$young=0
lsgo.ddl$r$young[lsgo.ddl$r$age==0]=1
lsgo.ddl$r$old=1-lsgo.ddl$r$young
lsgo.ddl$F$young=0
lsgo.ddl$F$young[lsgo.ddl$F$age==0]=1
lsgo.ddl$F$old=1-lsgo.ddl$F$young
lsgo.ddl$F$ftime=lsgo.ddl$F$time
lsgo.ddl$F$ftime[lsgo.ddl$F$time==2017]=2016
lsgo.ddl$p$ftime=lsgo.ddl$p$time
lsgo.ddl$p$ftime[lsgo.ddl$p$time==2018]=2017
lsgo.ddl$r$ftime=lsgo.ddl$r$time
lsgo.ddl$r$ftime[lsgo.ddl$r$time==2018]=2017
lsgo.ddl$S<-merge_design.covariates(lsgo.ddl$S,covs)
lsgo.ddl$p<-merge_design.covariates(lsgo.ddl$p,covs)
lsgo.ddl$r<-merge_design.covariates(lsgo.ddl$r,covs)
lsgo.ddl$F<-merge_design.covariates(lsgo.ddl$F,covs)
ftime=list(formula=~ftime)
age=list(formula=~young)
agetime=list(formula=~young*time)
p.time=list(formula=~time,fixed=list(time=2018,value=0))
age.p.time=list(formula=~young+time,fixed=list(time=2018,value=0))
young.time=list(formula=~young:time)
old.ptime=list(formula=~old:ftime)
old.time=list(formula=~old:time)
green=list(formula=~green)
green.mis=list(formula=~greenmis)
dens=list(formula=~dens)
hatch=list(formula=~hatch)
green.young=list(formula=~young:green)
green.mis.young=list(formula=~young:greenmis)
dens.young=list(formula=~young:dens)
hatch.young=list(formula=~young:hatch)
greensq=list(formula=~young:green+young:greensq)
hatchgreen=list(formula=~young:(green+hatch))
green.old=list(formula=~old:green)
green.mis.old=list(formula=~old:greenmis)
dens.old=list(formula=~old:dens)
hatch.old=list(formula=~old:hatch)
old.Time=list(formula=~Time:old)
time=list(formula=~time)
dot=list(formula=~1)
mark.green<-mark(lsgo.proc,lsgo.ddl,model="Burnham",model.parameters=list(
S=green.young,p=old.time,r=young,F=young))
lsgo.ddl$F$young
mark.green<-mark(lsgo.proc,lsgo.ddl,model="Burnham",model.parameters=list(
S=green.young,p=old.time,r=age,F=age))
mark.green<-mark(lsgo.proc,lsgo.ddl,model="Burnham",model.parameters=list(
S=green.young,p=old.time,r=age,F=age))
mark.green2<-mark(lsgo.proc,lsgo.ddl,model="Burnham",model.parameters=list(
S=green.young,p=old.time,r=agetime,F=old.time))
mark.green3<-mark(lsgo.proc,lsgo.ddl,model="Burnham",model.parameters=list(
S=green.young,p=old.time,r=agetime,F=age.time))
mark.green4<-mark(lsgo.proc,lsgo.ddl,model="Burnham",model.parameters=list(
S=green.young,p=old.time,r=time,F=age))
mark.mis<-mark(lsgo.proc,lsgo.ddl,model="Burnham",model.parameters=list(
S=green.mis.young,p=old.time,r=age,F=age))
mark.dens<-mark(lsgo.proc,lsgo.ddl,model="Burnham",model.parameters=list(
S=dens.young,p=old.time,r=age,F=age))
mark.hatch<-mark(lsgo.proc,lsgo.ddl,model="Burnham",model.parameters=list(
S=hatch.young,p=old.time,r=age,F=age))
mark.greenhatch<-mark(lsgo.proc,lsgo.ddl,model="Burnham",model.parameters=list(
S=hatchgreen,p=old.time,r=young,F=young))
mark.greenhatch<-mark(lsgo.proc,lsgo.ddl,model="Burnham",model.parameters=list(
S=hatchgreen,p=old.time,r=age,F=age))
collect.models(adjust = TRUE)
#top model is S1time S2dot p1dot p2time r time Fage*time
write.csv(collect.models()$model.table,'../GOF results/lsgo_nocov_modsel_rmark.csv')
export.chdata(data=lsgo.proc,filename='lsgoburnham.inp','markage')
export.MARK(collect.models(),'lsgoburnham',model = "Burnham")
export.MARK(lsgo.proc,'lsgoburnham',model = model3)
model10<-mark(lsgo.proc,lsgo.ddl,model="Burnham",model.parameters=list(
S=young.time,p=old.time,r=time,F=age
))
collect.models(adjust = TRUE)
mark.mis<-mark(lsgo.proc,lsgo.ddl,model="Burnham",model.parameters=list(
S=green.mis.young,p=old.time,r=time,F=age))
source("~/Goose files/demography ms/bugs files/model selection files/SF/goose burnham varsel/lsgo_burnham_ehist_rmark.r", echo=TRUE)
collect.models(adjust = TRUE)
collect.models(adjust = TRUE)
mark.mis<-mark(lsgo.proc,lsgo.ddl,model="Burnham",model.parameters=list(
S=green.mis.young,p=old.time,r=age,F=age))
collect.models(adjust = TRUE)
covs
setwd('..')
thePackage='algaeClassify'
document(thePackage)
path <- find.package(thePackage)
system(paste(shQuote(file.path(R.home("bin"), "R")), "CMD", "Rd2pdf", shQuote(path)))
rm(list=ls())
# define the package name
thePackage <- "algaeClassify"
# set directory to the package development folder
setwd("C:/Users/vpatil/Documents/Geisha_main/phyto_package/GEISHA_phytoplankton_github_shared/package builds/")
# create new bare-bones package in development folder
# NOTE: only run package creation script once
#install.packages("devtools"); # make sure your have the most recent version
#install.packages("roxygen2"); # make sure your have the most recent version
library(devtools); library(roxygen2)
# create(thePackage)
setwd('algaeClassify')
rm(list='traitranges')
roxygenize('.')
# STEP 2, add functionality ###################################################
# (1) update DESCRIPTION file (package description, authors, dependencies)
# (2) add functions (*.R) in R folder of package
# (3) within *.R files should include roxygen2 markdown of function and
#     parameter txt (e.g., what you see in manual)
###############################################################################
# add dataset to package
lakegeneva <- read.csv('../../lakegeneva.csv')
# use_data(library_MFG, pkg = thePackage, internal = TRUE, overwrite = TRUE)
setwd('C:/Users/vpatil/Documents/Geisha_main/phyto_package/GEISHA_phytoplankton_github_shared/package builds/algaeClassify/')
use_data(lakegeneva, overwrite = TRUE)
rimet_mfgtraits<-read.csv('C:/Users/vpatil/Documents/Geisha_main/phyto_package/GEISHA_phytoplankton_github_shared/Frederic_MFGtraits.csv')
mfgTraits=rimet_mfgtraits[!is.na(rimet_mfgtraits$MFG.fromtraits),]
.simpleCap <- function(x) {
s <- strsplit(x, " ")[[1]]
paste(toupper(substring(s, 1, 1)), substring(s, 2),
sep = "", collapse = " ")}
names(mfgTraits)<-sapply(names(mfgTraits),.simpleCap)
names(mfgTraits)[1]='phyto_name'
names(mfgTraits)[2:3]=c('genus','species')
setwd('C:/Users/vpatil/Documents/Geisha_main/phyto_package/GEISHA_phytoplankton_github_shared/package builds/algaeClassify/')
use_data(mfgTraits,overwrite=TRUE)
fred.csrtraits<-read.csv('C:/Users/vpatil/Documents/Geisha_main/phyto_package/GEISHA_phytoplankton_github_shared/Fred_CSRtraits_numericClassCorrection.csv')
csrTraits<-fred.csrtraits
csrTraits<-genus_species_extract(csrTraits,'phyto_name')
csrTraits$phyto_name<-paste(csrTraits$genus,csrTraits$species)
csrTraits$phyto_name<-trimws(csrTraits$phyto_name)
setwd('C:/Users/vpatil/Documents/Geisha_main/phyto_package/GEISHA_phytoplankton_github_shared/package builds/algaeClassify/')
use_data(csrTraits,overwrite=TRUE)
mfg_csr_library<-read.csv('C:/Users/vpatil/Documents/Geisha_main/phyto_package/mee ms/mfg_csr_library.csv')
setwd('C:/Users/vpatil/Documents/Geisha_main/phyto_package/GEISHA_phytoplankton_github_shared/package builds/algaeClassify/')
use_data(mfg_csr_library,overwrite=TRUE)
setwd('C:/Users/vpatil/Documents/Geisha_main/phyto_package/GEISHA_phytoplankton_github_shared/')
load('traitranges.rda')
traitranges=traitranges[1:3,]
traitranges$units=c('um^-1','um','')
setwd('C:/Users/vpatil/Documents/Geisha_main/phyto_package/GEISHA_phytoplankton_github_shared/package builds/algaeClassify/')
use_data(traitranges, overwrite = TRUE)
setwd('C:/Users/vpatil/Documents/Geisha_main/phyto_package/GEISHA_phytoplankton_github_shared/')
species_mfg_library<-read.csv('expanded_mfg_library_2_1_2021.csv')
species_mfg_library<-subset(species_mfg_library,select=c('genus','species','MFG','source'))
species_mfg_library$MFG<-gsub('6a-LargeCent','6a1-LargeCent',species_mfg_library$MFG)
setwd('C:/Users/vpatil/Documents/Geisha_main/phyto_package/GEISHA_phytoplankton_github_shared/package builds/algaeClassify/')
use_data(species_mfg_library,overwrite=TRUE)
rm(list='traitranges')
# STEP 3, error check and compile package for CRAN ############################
# (1) update DESCRIPTION file
# (2) add functions (*.R) in R folder of package
###############################################################################
# constructs binaries
library(devtools);
# creates bundle to submit to CRAN (*.tar.zip file found in development folder)
build('.', manual = FALSE)
# error checks prior to submission (all errors and warnings need to be addressed)
rm(list=ls())
# set directory to the package development folder
setwd("C:/Users/vpatil/Documents/Geisha_main/phyto_package/GEISHA_phytoplankton_github_shared/package builds/")
library(devtools); library(roxygen2)
# create(thePackage)
setwd('algaeClassify')
check('.',cran=FALSE)
warning()
# STEP 4, Build example PDF manual (will not be same as CRAN, but close) ######
###############################################################################
# BEFORE STARTING##############################################################
# 1) Download & install MiKTeX to generate manual & vignettes
# 2) through MikTeX /Maintenace/packages install: url, inconsolata, upquote
###############################################################################
setwd('..')
thePackage='algaeClassify'
document(thePackage)
path <- find.package(thePackage)
system(paste(shQuote(file.path(R.home("bin"), "R")), "CMD", "Rd2pdf", shQuote(path)))
#release code
setwd('algaeClassify/')
use_readme_md()
spell_check()
check_rhub()
check_win_devel(thePackage,manual=FALSE)
setwd('..')
check_win_devel(thePackage,manual=FALSE)
check_win_release(thePackage,manual=FALSE)
usethis::use_build_ignore('./cran-comments.md')
setwd('..')
thePackage='algaeClassify'
setwd('..')
setwd('GEISHA_phytoplankton_github_shared/package builds/')
release(thePackage,check=FALSE)
setwd('algaeClassify/')
# creates bundle to submit to CRAN (*.tar.zip file found in development folder)
build('.', manual = FALSE)
setwd('..')
rm(list=ls())
# define the package name
thePackage <- "algaeClassify"
# set directory to the package development folder
setwd("C:/Users/vpatil/Documents/Geisha_main/phyto_package/GEISHA_phytoplankton_github_shared/package builds/")
# create new bare-bones package in development folder
# NOTE: only run package creation script once
#install.packages("devtools"); # make sure your have the most recent version
#install.packages("roxygen2"); # make sure your have the most recent version
library(devtools); library(roxygen2)
# create(thePackage)
setwd('algaeClassify')
rm(list='traitranges')
roxygenize('.')
# STEP 2, add functionality ###################################################
# (1) update DESCRIPTION file (package description, authors, dependencies)
# (2) add functions (*.R) in R folder of package
# (3) within *.R files should include roxygen2 markdown of function and
#     parameter txt (e.g., what you see in manual)
###############################################################################
# add dataset to package
lakegeneva <- read.csv('../../lakegeneva.csv')
# use_data(library_MFG, pkg = thePackage, internal = TRUE, overwrite = TRUE)
setwd('C:/Users/vpatil/Documents/Geisha_main/phyto_package/GEISHA_phytoplankton_github_shared/package builds/algaeClassify/')
use_data(lakegeneva, overwrite = TRUE)
rimet_mfgtraits<-read.csv('C:/Users/vpatil/Documents/Geisha_main/phyto_package/GEISHA_phytoplankton_github_shared/Frederic_MFGtraits.csv')
mfgTraits=rimet_mfgtraits[!is.na(rimet_mfgtraits$MFG.fromtraits),]
.simpleCap <- function(x) {
s <- strsplit(x, " ")[[1]]
paste(toupper(substring(s, 1, 1)), substring(s, 2),
sep = "", collapse = " ")}
names(mfgTraits)<-sapply(names(mfgTraits),.simpleCap)
names(mfgTraits)[1]='phyto_name'
names(mfgTraits)[2:3]=c('genus','species')
setwd('C:/Users/vpatil/Documents/Geisha_main/phyto_package/GEISHA_phytoplankton_github_shared/package builds/algaeClassify/')
use_data(mfgTraits,overwrite=TRUE)
fred.csrtraits<-read.csv('C:/Users/vpatil/Documents/Geisha_main/phyto_package/GEISHA_phytoplankton_github_shared/Fred_CSRtraits_numericClassCorrection.csv')
csrTraits<-fred.csrtraits
csrTraits<-genus_species_extract(csrTraits,'phyto_name')
csrTraits$phyto_name<-paste(csrTraits$genus,csrTraits$species)
csrTraits$phyto_name<-trimws(csrTraits$phyto_name)
setwd('C:/Users/vpatil/Documents/Geisha_main/phyto_package/GEISHA_phytoplankton_github_shared/package builds/algaeClassify/')
use_data(csrTraits,overwrite=TRUE)
mfg_csr_library<-read.csv('C:/Users/vpatil/Documents/Geisha_main/phyto_package/mee ms/mfg_csr_library.csv')
setwd('C:/Users/vpatil/Documents/Geisha_main/phyto_package/GEISHA_phytoplankton_github_shared/package builds/algaeClassify/')
use_data(mfg_csr_library,overwrite=TRUE)
# setwd('C:/Users/vpatil/Documents/Geisha_main/phyto_package/GEISHA_phytoplankton_github_shared/package builds/')# use_data(library_MFG, pkg = thePackage, internal = TRUE, overwrite = TRUE)
#
# load('sppMFG.rda')
# setwd('data/')
# load('species.mfg.library.rda')
# setwd('..')
# use_data(species.mfg.library, overwrite = TRUE)
setwd('C:/Users/vpatil/Documents/Geisha_main/phyto_package/GEISHA_phytoplankton_github_shared/')
load('traitranges.rda')
traitranges=traitranges[1:3,]
traitranges$units=c('um^-1','um','')
setwd('C:/Users/vpatil/Documents/Geisha_main/phyto_package/GEISHA_phytoplankton_github_shared/package builds/algaeClassify/')
use_data(traitranges, overwrite = TRUE)
setwd('C:/Users/vpatil/Documents/Geisha_main/phyto_package/GEISHA_phytoplankton_github_shared/')
species_mfg_library<-read.csv('expanded_mfg_library_2_1_2021.csv')
species_mfg_library<-subset(species_mfg_library,select=c('genus','species','MFG','source'))
species_mfg_library$MFG<-gsub('6a-LargeCent','6a1-LargeCent',species_mfg_library$MFG)
setwd('C:/Users/vpatil/Documents/Geisha_main/phyto_package/GEISHA_phytoplankton_github_shared/package builds/algaeClassify/')
use_data(species_mfg_library,overwrite=TRUE)
rm(list='traitranges')
# STEP 3, error check and compile package for CRAN ############################
# (1) update DESCRIPTION file
# (2) add functions (*.R) in R folder of package
###############################################################################
# constructs binaries
library(devtools);
# creates bundle to submit to CRAN (*.tar.zip file found in development folder)
build('.', manual = FALSE)
###############################################################################
# package creation & maintenance file
# M.J. Lajeunesse, R course 7/5/16
###############################################################################
rm(list=ls())
# define the package name
thePackage <- "algaeClassify"
# set directory to the package development folder
setwd("C:/Users/vpatil/Documents/Geisha_main/phyto_package/GEISHA_phytoplankton_github_shared/package builds/")
# create new bare-bones package in development folder
# NOTE: only run package creation script once
#install.packages("devtools"); # make sure your have the most recent version
#install.packages("roxygen2"); # make sure your have the most recent version
library(devtools); library(roxygen2)
# create(thePackage)
setwd('algaeClassify')
rm(list='traitranges')
roxygenize('.')
# STEP 2, add functionality ###################################################
# (1) update DESCRIPTION file (package description, authors, dependencies)
# (2) add functions (*.R) in R folder of package
# (3) within *.R files should include roxygen2 markdown of function and
#     parameter txt (e.g., what you see in manual)
###############################################################################
# add dataset to package
lakegeneva <- read.csv('../../lakegeneva.csv')
# use_data(library_MFG, pkg = thePackage, internal = TRUE, overwrite = TRUE)
setwd('C:/Users/vpatil/Documents/Geisha_main/phyto_package/GEISHA_phytoplankton_github_shared/package builds/algaeClassify/')
use_data(lakegeneva, overwrite = TRUE)
rimet_mfgtraits<-read.csv('C:/Users/vpatil/Documents/Geisha_main/phyto_package/GEISHA_phytoplankton_github_shared/Frederic_MFGtraits.csv')
mfgTraits=rimet_mfgtraits[!is.na(rimet_mfgtraits$MFG.fromtraits),]
.simpleCap <- function(x) {
s <- strsplit(x, " ")[[1]]
paste(toupper(substring(s, 1, 1)), substring(s, 2),
sep = "", collapse = " ")}
names(mfgTraits)<-sapply(names(mfgTraits),.simpleCap)
names(mfgTraits)[1]='phyto_name'
names(mfgTraits)[2:3]=c('genus','species')
setwd('C:/Users/vpatil/Documents/Geisha_main/phyto_package/GEISHA_phytoplankton_github_shared/package builds/algaeClassify/')
use_data(mfgTraits,overwrite=TRUE)
fred.csrtraits<-read.csv('C:/Users/vpatil/Documents/Geisha_main/phyto_package/GEISHA_phytoplankton_github_shared/Fred_CSRtraits_numericClassCorrection.csv')
csrTraits<-fred.csrtraits
csrTraits<-genus_species_extract(csrTraits,'phyto_name')
csrTraits$phyto_name<-paste(csrTraits$genus,csrTraits$species)
csrTraits$phyto_name<-trimws(csrTraits$phyto_name)
setwd('C:/Users/vpatil/Documents/Geisha_main/phyto_package/GEISHA_phytoplankton_github_shared/package builds/algaeClassify/')
use_data(csrTraits,overwrite=TRUE)
mfg_csr_library<-read.csv('C:/Users/vpatil/Documents/Geisha_main/phyto_package/mee ms/mfg_csr_library.csv')
setwd('C:/Users/vpatil/Documents/Geisha_main/phyto_package/GEISHA_phytoplankton_github_shared/package builds/algaeClassify/')
use_data(mfg_csr_library,overwrite=TRUE)
# setwd('C:/Users/vpatil/Documents/Geisha_main/phyto_package/GEISHA_phytoplankton_github_shared/package builds/')# use_data(library_MFG, pkg = thePackage, internal = TRUE, overwrite = TRUE)
#
# load('sppMFG.rda')
# setwd('data/')
# load('species.mfg.library.rda')
# setwd('..')
# use_data(species.mfg.library, overwrite = TRUE)
setwd('C:/Users/vpatil/Documents/Geisha_main/phyto_package/GEISHA_phytoplankton_github_shared/')
load('traitranges.rda')
traitranges=traitranges[1:3,]
traitranges$units=c('um^-1','um','')
setwd('C:/Users/vpatil/Documents/Geisha_main/phyto_package/GEISHA_phytoplankton_github_shared/package builds/algaeClassify/')
use_data(traitranges, overwrite = TRUE)
setwd('C:/Users/vpatil/Documents/Geisha_main/phyto_package/GEISHA_phytoplankton_github_shared/')
species_mfg_library<-read.csv('expanded_mfg_library_2_1_2021.csv')
species_mfg_library<-subset(species_mfg_library,select=c('genus','species','MFG','source'))
species_mfg_library$MFG<-gsub('6a-LargeCent','6a1-LargeCent',species_mfg_library$MFG)
setwd('C:/Users/vpatil/Documents/Geisha_main/phyto_package/GEISHA_phytoplankton_github_shared/package builds/algaeClassify/')
use_data(species_mfg_library,overwrite=TRUE)
rm(list='traitranges')
# STEP 3, error check and compile package for CRAN ############################
# (1) update DESCRIPTION file
# (2) add functions (*.R) in R folder of package
###############################################################################
# constructs binaries
library(devtools);
# creates bundle to submit to CRAN (*.tar.zip file found in development folder)
build('.', manual = FALSE)
release(thePackage,check=FALSE)
setwd('..')
release(thePackage,check=FALSE)
###############################################################################
# package creation & maintenance file
# M.J. Lajeunesse, R course 7/5/16
###############################################################################
rm(list=ls())
# define the package name
thePackage <- "algaeClassify"
# set directory to the package development folder
setwd("C:/Users/vpatil/Documents/Geisha_main/phyto_package/GEISHA_phytoplankton_github_shared/package builds/")
# create new bare-bones package in development folder
# NOTE: only run package creation script once
#install.packages("devtools"); # make sure your have the most recent version
#install.packages("roxygen2"); # make sure your have the most recent version
library(devtools); library(roxygen2)
# create(thePackage)
setwd('algaeClassify')
rm(list='traitranges')
roxygenize('.')
# STEP 2, add functionality ###################################################
# (1) update DESCRIPTION file (package description, authors, dependencies)
# (2) add functions (*.R) in R folder of package
# (3) within *.R files should include roxygen2 markdown of function and
#     parameter txt (e.g., what you see in manual)
###############################################################################
# add dataset to package
lakegeneva <- read.csv('../../lakegeneva.csv')
# use_data(library_MFG, pkg = thePackage, internal = TRUE, overwrite = TRUE)
setwd('C:/Users/vpatil/Documents/Geisha_main/phyto_package/GEISHA_phytoplankton_github_shared/package builds/algaeClassify/')
use_data(lakegeneva, overwrite = TRUE)
rimet_mfgtraits<-read.csv('C:/Users/vpatil/Documents/Geisha_main/phyto_package/GEISHA_phytoplankton_github_shared/Frederic_MFGtraits.csv')
mfgTraits=rimet_mfgtraits[!is.na(rimet_mfgtraits$MFG.fromtraits),]
.simpleCap <- function(x) {
s <- strsplit(x, " ")[[1]]
paste(toupper(substring(s, 1, 1)), substring(s, 2),
sep = "", collapse = " ")}
names(mfgTraits)<-sapply(names(mfgTraits),.simpleCap)
names(mfgTraits)[1]='phyto_name'
names(mfgTraits)[2:3]=c('genus','species')
setwd('C:/Users/vpatil/Documents/Geisha_main/phyto_package/GEISHA_phytoplankton_github_shared/package builds/algaeClassify/')
use_data(mfgTraits,overwrite=TRUE)
fred.csrtraits<-read.csv('C:/Users/vpatil/Documents/Geisha_main/phyto_package/GEISHA_phytoplankton_github_shared/Fred_CSRtraits_numericClassCorrection.csv')
csrTraits<-fred.csrtraits
csrTraits<-genus_species_extract(csrTraits,'phyto_name')
csrTraits$phyto_name<-paste(csrTraits$genus,csrTraits$species)
csrTraits$phyto_name<-trimws(csrTraits$phyto_name)
setwd('C:/Users/vpatil/Documents/Geisha_main/phyto_package/GEISHA_phytoplankton_github_shared/package builds/algaeClassify/')
use_data(csrTraits,overwrite=TRUE)
mfg_csr_library<-read.csv('C:/Users/vpatil/Documents/Geisha_main/phyto_package/mee ms/mfg_csr_library.csv')
setwd('C:/Users/vpatil/Documents/Geisha_main/phyto_package/GEISHA_phytoplankton_github_shared/package builds/algaeClassify/')
use_data(mfg_csr_library,overwrite=TRUE)
# setwd('C:/Users/vpatil/Documents/Geisha_main/phyto_package/GEISHA_phytoplankton_github_shared/package builds/')# use_data(library_MFG, pkg = thePackage, internal = TRUE, overwrite = TRUE)
#
# load('sppMFG.rda')
# setwd('data/')
# load('species.mfg.library.rda')
# setwd('..')
# use_data(species.mfg.library, overwrite = TRUE)
setwd('C:/Users/vpatil/Documents/Geisha_main/phyto_package/GEISHA_phytoplankton_github_shared/')
load('traitranges.rda')
traitranges=traitranges[1:3,]
traitranges$units=c('um^-1','um','')
setwd('C:/Users/vpatil/Documents/Geisha_main/phyto_package/GEISHA_phytoplankton_github_shared/package builds/algaeClassify/')
use_data(traitranges, overwrite = TRUE)
setwd('C:/Users/vpatil/Documents/Geisha_main/phyto_package/GEISHA_phytoplankton_github_shared/')
species_mfg_library<-read.csv('expanded_mfg_library_2_1_2021.csv')
species_mfg_library<-subset(species_mfg_library,select=c('genus','species','MFG','source'))
species_mfg_library$MFG<-gsub('6a-LargeCent','6a1-LargeCent',species_mfg_library$MFG)
setwd('C:/Users/vpatil/Documents/Geisha_main/phyto_package/GEISHA_phytoplankton_github_shared/package builds/algaeClassify/')
use_data(species_mfg_library,overwrite=TRUE)
rm(list='traitranges')
# STEP 3, error check and compile package for CRAN ############################
# (1) update DESCRIPTION file
# (2) add functions (*.R) in R folder of package
###############################################################################
# constructs binaries
library(devtools);
# creates bundle to submit to CRAN (*.tar.zip file found in development folder)
build('.', manual = FALSE)
setwd('..')
release(thePackage,check=FALSE)
